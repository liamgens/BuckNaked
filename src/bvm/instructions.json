{
  "add": {
    "arg_count": 3,
    "arg_types": ["num", "num"],
    "expr": "args[0] + args[1]",
    "dest": "args[2]"
  },
  "sub": {
    "arg_count": 3,
    "arg_types": ["num", "num"],
    "expr": "args[0] - args[1]",
    "dest": "args[2]"
  },
  "mul": {
    "arg_count": 3,
    "arg_types": ["num", "num"],
    "expr": "args[0] * args[1]",
    "dest": "args[2]"
  },
  "div": {
    "arg_count": 3,
    "arg_types": ["num", "num"],
    "expr": "args[0] / args[1]",
    "dest": "args[2]",
    "div_by_zero": "args[1]"
  },
  "mod": {
    "arg_count": 3,
    "arg_types": ["num", "num"],
    "expr": "args[0] % args[1]",
    "dest": "args[2]",
    "div_by_zero": "args[1]"
  },
  "var": {
    "arg_count": 2,
    "arg_types": ["name", "any"],
    "name": "args[0]",
    "expr": "env.addVariable(args[0], args[1])"
  },
  "set": {
    "arg_count": 2,
    "arg_types": ["name", "any"],
    "name": "args[0]",
    "expr": "env.setVariable(args[0], args[1])"
  },
  "print": {
    "arg_count": 1,
    "arg_types": ["any"],
    "expr": "sysout(args[0])"
  },
  "text": {
    "arg_count": 4,
    "arg_types": ["num", "num", "string", "string"],
    "expr": "eventBus.$emit('gfxText', args[0], args[1], args[2], args[3])"
  },
  "recto": {
    "arg_count": 5,
    "arg_types": ["num", "num", "num", "num", "string"],
    "expr": "eventBus.$emit('gfxOutlineRect', args[0], args[1], args[2], args[3], args[4])"
  },
  "rectf": {
    "arg_count": 5,
    "arg_types": ["num", "num", "num", "num", "string"],
    "expr": "eventBus.$emit('gfxFillRect', args[0], args[1], args[2], args[3], args[4])"
  },
  "and": {
    "arg_count": 3,
    "arg_types": ["bool", "bool"],
    "expr": "eval(args[0]) && eval(args[1])",
    "dest": "args[2]"
  },
  "or": {
    "arg_count": 3,
    "arg_types": ["bool", "bool"],
    "expr": "eval(args[0]) || eval(args[1])",
    "dest": "args[2]"
  },
  "not": {
    "arg_count": 2,
    "arg_types": ["bool"],
    "expr": "!eval(args[0])",
    "dest": "args[1]"
  },
  "fn": {
    "expr": "args[0]"
  },
  "fnParse": {
    "arg_count": 1,
    "arg_types": "any",
    "expr": "env.updateFunction(args[0], args[1])"
  }
}
